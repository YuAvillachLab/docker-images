version: '3.3'
services:

  # nginx
  nginx:
    image: dbmi/nginx:${nginx_version}
    labels:
      - "edu.hms.harvard.dbmi.stack.name=${STACK_NAME}"
      - "edu.hms.harvard.dbmi.stack.env=${STACK_ENV}"
    restart: always
    # application stack exposed ports
    ports:
      - 80:80
      - 443:443
    networks:
      - i2b2-net


  ## PIC-SURE API Stack ##
  # IRCT
  irct:
    image: dbmi/irct:${irct_version}
    labels:
      - "edu.hms.harvard.dbmi.stack.name=${STACK_NAME}"
      - "edu.hms.harvard.dbmi.stack.env=${STACK_ENV}"
    depends_on:
       - nginx
    env_file:
      - ${ENV_FILE}
    # debug command
    command: --debug --server-config=standalone.xml
    restart: always
    networks:
      - i2b2-net
    expose:
      - 8080
    ports:
      # debug port
      - 8787:8787
    volumes:
      - ${LOCAL_IRCT}/IRCT-CL.war:/opt/jboss/wildfly/standalone/deployments/IRCT-CL.war:cached

  irct-init:
    image: dbmi/irct-init:${irct_init_version}
    env_file:
      - ${ENV_FILE}
    restart: on-failure:10
    networks:
      - i2b2-net

  # IRCT DB
  # remote database ssh tunnel
  db:
    image: thomass/ssh-client:${db_version}
    container_name: ${IRCTMYSQLADDRESS}
    env_file:
      - ${ENV_FILE}
    environment:
      - SSH_AUTH_SOCK=/ssh-agent/ssh-agent.sock
    labels:
      - "edu.hms.harvard.dbmi.stack.name=${STACK_NAME}"
      - "edu.hms.harvard.dbmi.stack.env=${STACK_ENV}"
    volumes:
      # ssh config file throws bad owner/permissions error if we don't map it to /etc/ssh - Andre
      - ${SSH_CONFIG_LOCATION}/config:/etc/ssh/ssh_config:ro
      - ssh-agent:/ssh-agent
    entrypoint: ssh -Ngv -L ${DOCKER_IRCT_DB_PORT}:${IRCTMYSQLADDRESS}:${IRCT_DB_PORT} -o StrictHostKeyChecking=no -F /etc/ssh/ssh_config
    command: ${SSH_CONFIG_CONFIG}
    networks:
      - i2b2-net
    ports:
      - ${DOCKER_IRCT_DB_PORT}:${DOCKER_IRCT_DB_PORT}

networks:
    i2b2-net:
volumes:
    # ssh-agent used to skip tty response for ssh key passphrase
    # allows for local machine to forward its ssh-agent
    # see docker-images/deployments/ssh-agent - Andre
    ssh-agent:
        external: true
